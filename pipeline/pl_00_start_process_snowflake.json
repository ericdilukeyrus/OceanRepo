{
	"name": "pl_00_start_process_snowflake",
	"properties": {
		"activities": [
			{
				"name": "Get All Active MBR Scope",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Copy Files from Sharepoint",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT [MBR_Scope] as MBRScope,\n    'toload/' + [MBR_Scope]  as MBRScope_Folder\n  FROM [cfg].[@{pipeline().globalParameters.gSourcesTableName}]\nWHERE [Active_fl] = 'Y'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_ocean_cfg",
						"type": "DatasetReference",
						"parameters": {
							"vTableName": {
								"value": "@pipeline().globalParameters.gSourcesTableName",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach Active MBR Scope",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get All Active MBR Scope",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get All Active MBR Scope').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Run Process by MBR Scope",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pl_01_read_all_MBR_files_sf",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"MBRScope_Folder": {
										"value": "@item().MBRScope_Folder",
										"type": "Expression"
									},
									"MBR_Scope": {
										"value": "@item().MBRScope",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "Initialization",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_00_initialization",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "Copy Files from Sharepoint",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Initialization",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_01_get_files_sharepoint",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "Archives MBR Files",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ForEach Active MBR Scope",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_04_archive_files",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Archives MBR Files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "POST",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "RestResource1",
						"type": "DatasetReference"
					}
				]
			}
		],
		"annotations": [],
		"lastPublishTime": "2023-02-17T13:38:45Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}